#! /bin/sh
#
# This script should be called by upssched via the CMDSCRIPT directive.
# 
# Here is a quick example to show how to handle a bunch of possible
# timer names with the help of the case structure.
#
# This script may be replaced with another program without harm.
#
# The first argument passed to your CMDSCRIPT is the name of the timer
# from your AT lines.
case $1 in
       onbatt)
          logger -t upssched-cmd "The UPS is on battery"
          ;;
       online)
          logger -t upssched-cmd "The UPS is back on power"
          ;;
       commbad)
          logger -t upssched-cmd "The server lost communication with UPS"
          ;;
       commok)
          logger -t upssched-cmd "The server re-established communication with UPS"
          ;;
       earlyshutdown)
          logger -t upssched-cmd "UPS on battery too long, forced Mikrotik shutdown"
          ;;
       shutdowncritical)
          logger -t upssched-cmd "UPS on battery critical, forced shutdown"
          /usr/sbin/upsmon -c fsd
          if [ $? -ne 0 ]; then
              logger -t upssched-cmd "Failed to execute shutdown command"
          fi
          ;;
       upsgone)
          logger -t upssched-cmd "The UPS has been gone for a while"
          ;;
       replacebatt)
          logger -t upssched-cmd "The UPS needs a new battery"
          ;;
       powerdown)
          logger -t upssched-cmd "Powerdown"
          /usr/sbin/upsmon -c fsd
          if [ $? -ne 0 ]; then
              logger -t upssched-cmd "Failed to execute powerdown command"
          fi
          ;;
       *)
          logger -t upssched-cmd "Unrecognized command: $1"
          ;;
esac
